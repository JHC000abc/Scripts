# !/usr/bin/python3
# -*- coding:utf-8 -*-
"""
@author: JHC000abc@gmail.com
@file: tools_calculate_lines.py
@time: 2024/9/2 14:15 
@desc: 

"""

from sdk.temp.temp_supports import IsSolution


class Solution(IsSolution):
    """
    Solution
    """

    def __init__(self, **kwargs):
        """
        初始化函数
        :param kwargs: 字典类型的参数字典，包含可选的关键字参数
        """
        super(Solution, self).__init__()
        self.__dict__.update({k: v for k, v in [
            i for i in locals().values() if isinstance(i, dict)][0].items()})
        self.name_list = [
            "10306247",
            "10306223",
            "10306222",
            "10305933",
            "10305932",
            "10305895",
            "10305876",
            "10305863",
            "10305836",
            "10305676",
            "10305341",
            "10305081",
            "10305060",
            "10304712",
            "10304610",
            "10304241",
            "10303877",
            "10303875",
            "10303724",
            "10303211",
            "10303190",
            "10303037",
            "10300681",
            "10300561",
            "10300514",
            "10300469",
            "10300435",
            "10300434",
            "10300433",
            "10300045",
            "10299916",
            "10299861",
            "10299856",
            "10299767",
            "10299766",
            "10299764",
            "10299333",
            "10298759",
            "10298488",
            "10298447",
            "10298011",
            "10297329",
            "10297327",
            "10296424",
            "10296229",
            "10295700",
            "10295627",
            "10295626",
            "10295624",
            "10295081",
            "10295079",
            "10295076",
            "10295072",
            "10294203",
            "10292680",
            "10292552",
            "10292470",
            "10292124",
            "10292013",
            "10292009",
            "10292007",
            "10292006",
            "10291369",
            "10291212",
            "10291084",
            "10290981",
            "10290977",
            "10290976",
            "10283869",
            "10283867",
            "10283816",
            "10283815",
            "10283814",
            "10283320",
            "10282948",
            "10282942",
            "10282941",
            "10282421",
            "10282416",
            "10282200",
            "10282159",
            "10281862",
            "10281855",
            "10281536",
            "10281439",
            "10281438",
            "10280990",
            "10280987",
            "10280764",
            "10280400",
            "10280319",
            "10280318",
            "10280208",
            "10280207",
            "10280069",
            "10279906",
            "10279805",
            "10279690",
            "10279540",
            "10279420",
            "10278141",
            "10277864",
            "10277642",
            "10277382",
            "10277380",
            "10277330",
            "10277236",
            "10277219",
            "10277218",
            "10277217",
            "10277150",
            "10277148",
            "10277103",
            "10277026",
            "10277020",
            "10276997",
            "10276984",
            "10276947",
            "10276884",
            "10276752",
            "10276744",
            "10276712",
            "10276704",
            "10276493",
            "10276478",
            "10276470",
            "10276431",
            "10276430",
            "10276281",
            "10276273",
            "10276271",
            "10276144",
            "10276056",
            "10276054",
            "10275966",
            "10275928",
            "10275489",
            "10275434",
            "10275192",
            "10275167",
            "10275003",
            "10274701",
            "10274700",
            "10274699",
            "10274504",
            "10274396",
            "10274283",
            "10274097",
            "10274012",
            "10272961",
            "10272821",
            "10272568",
            "10272567",
            "10272221",
            "10272204",
            "10271917",
            "10271709",
            "10271703",
            "10271618",
            "10271543",
            "10271541",
            "10271292",
            "10271291",
            "10270734",
            "10270489",
            "10269898",
            "10269891",
            "10269592",
            "10269587",
            "10269538",
            "10269459",
            "10269421",
            "10269090",
            "10268650",
            "10267859",
            "10267578",
            "10267028",
            "10266799",
            "10266791",
            "10266703",
            "10266654",
            "10266623",
            "10266448",
            "10266318",
            "10266252",
            "10266227",
            "10266226",
            "10266225",
            "10266224",
            "10265892",
            "10265692",
            "10265691",
            "10265614",
            "10265533",
            "10264927",
            "10264818",
            "10264770",
            "10264769",
            "10264768",
            "10264380",
            "10264076",
            "10264028",
            "10263980",
            "10263176",
            "10263097",
            "10263096",
            "10263095",
            "10262932",
            "10262649",
            "10262380",
            "10262371",
            "10262090",
            "10262071",
            "10262038",
            "10261986",
            "10261975",
            "10261885",
            "10261722",
            "10261720",
            "10261691",
            "10261413",
            "10261412",
            "10261337",
            "10261327",
            "10260764",
            "10260683",
            "10260630",
            "10260629",
            "10260565",
            "10260477",
            "10260240",
            "10260188",
            "10260187",
            "10260090",
            "10260085",
            "10258405",
            "10258403",
            "10258402",
            "10258399",
            "10258395",
            "10258393",
            "10258391",
            "10258390",
            "10258387",
            "10258385",
            "10258384",
            "10258382",
            "10258380",
            "10258379",
            "10258377",
            "10245524",
            "10245523",
            "10244968",
            "10244967",
            "10243619",
            "10243364",
            "10243296",
            "10242827",
            "10242825",
            "10242791",
            "10242769",
            "10242750",
            "10242658",
            "10242202",
            "10242179",
            "10241951",
            "10241927",
            "10241926",
            "10241924",
            "10241923",
            "10241922",
            "10241921",
            "10241463",
            "10241413",
            "10241090",
            "10241089",
            "10240729",
            "10240728",
            "10240501",
            "10239272",
            "10239157",
            "10239156",
            "10238797",
            "10238796",
            "10238646",
            "10238629",
            "10238395",
            "10238394",
            "10238174",
            "10238019",
            "10238018",
            "10237731",
            "10237428",
            "10237297",
            "10237033",
            "10236899",
            "10236678",
            "10236676",
            "10236445",
            "10236444",
            "10236442",
            "10236441",
            "10236171",
            "10236170",
            "10236169",
            "10236111",
            "10234897",
            "10234896",
            "10234804",
            "10234803",
            "10234802",
            "10234801",
            "10234800",
            "10234634",
            "10234573",
            "10234572",
            "10234571",
            "10234473",
            "10234472",
            "10234393",
            "10234205",
            "10234179",
            "10234029",
            "10233963",
            "10233937",
            "10233571",
            "10233570",
            "10233340",
            "10233200",
            "10233199",
            "10232940",
            "10232853",
            "10232852",
            "10232710",
            "10232709",
            "10232708",
            "10232232",
            "10231926",
            "10231002",
            "10230763",
            "10230762",
            "10230760",
            "10230522",
            "10229956",
            "10229953",
            "10229929",
            "10229926",
            "10229366",
            "10229365",
            "10229364",
            "10229226",
            "10228917",
            "10228916",
            "10228008",
            "10227567",
            "10227565",
            "10227266",
            "10227265",
            "10224891",
            "10224889",
            "10224779",
            "10224778",
            "10224776",
            "10224681",
            "10224680",
            "10224678",
            "10224198",
            "10224041",
            "10223816",
            "10223815",
            "10223814",
            "10223812",
            "10223361",
            "10223110",
            "10223108",
            "10223107",
            "10220489",
            "10219364",
            "10219361",
            "10219083",
            "10218425",
            "10218059",
            "10217930",
            "10217927",
            "10217631",
            "10217402",
            "10217129",
            "10216318",
            "10215887",
            "10215885",
            "10215774",
            "10215657",
            "10215656",
            "10215654",
            "10215560",
            "10215504",
            "10215468",
            "10215465",
            "10215274",
            "10215273",
            "10215113",
            "10215112",
            "10215005",
            "10214805",
            "10214803",
            "10213550",
            "10213489",
            "10213481",
            "10213480",
            "10213341",
            "10213107",
            "10212976",
            "10212896",
            "10212895",
            "10212787",
            "10212556",
            "10212144",
            "10212111",
            "10211901",
            "10211780",
            "10211778",
            "10211483",
            "10211482",
            "10211479",
            "10210345",
            "10210064",
            "10210062",
            "10209463",
            "10208303",
            "10208302",
            "10208021",
            "10207957",
            "10207893",
            "10207891",
            "10207889",
            "10207888",
            "10207403",
            "10205939",
            "10205544",
            "10205128",
            "10205127",
            "10205124",
            "10204569",
            "10204426",
            "10204425",
            "10203319",
            "10202177",
            "10201864",
            "10201863",
            "10201632",
            "10201444",
            "10201441",
            "10201123",
            "10201122",
            "10200816",
            "10200741",
            "10199827",
            "10199826",
            "10199825",
            "10199499",
            "10199444",
            "10199317",
            "10198818",
            "10198444",
            "10198443",
            "10198442",
            "10198441",
            "10198440",
            "10198439",
            "10196008",
            "10196007",
            "10196006",
            "10195479",
            "10195111",
            "10195050",
            "10195048",
            "10194952",
            "10194683",
            "10194468",
            "10194467",
            "10194466",
            "10193479",
            "10193478",
            "10191660",
            "10191647",
            "10191601",
            "10191515",
            "10191302",
            "10191298",
            "10191297",
            "10190691",
            "10190690",
            "10190688",
            "10190687",
            "10190685",
            "10190684",
            "10190683",
            "10190682",
            "10190680",
            "10190679",
            "10190677",
            "10190676",
            "10190675",
            "10188230",
            "10188229",
            "10188228",
            "10188227",
            "10188226",
            "10186309",
            "10185731",
            "10183549",
            "10183391",
            "10183045",
            "10181995",
            "10181925",
            "10181714",
            "10181681",
            "10181416",
            "10181247",
            "10180651",
            "10180263",
            "10179844",
            "10176608",
            "10175291",
            "10174183",
            "10174181",
            "10171597",
            "10168251",
            "10167723",
            "10165848",
            "10164532",
            "10163498",
            "10161061",
            "10159455",
            "10159172",
            "10132371",
            "10131653",
            "10130633",
            "10127571",
            "10114271",
            "10107891",
            "10107772",
            "10107125",
            "10106800"

        ]
    def exit_handler(self):
        """
        程序退出自动执行
        :return:
        """
        print("程序退出")

    # @DM.add_project()
    def muti_thread_function(self, *args):
        """
        处理数据函数
        :param args:
        :return:
        """
        arg, file, name = args

        return None

    def process(self, **kwargs):
        """
        处理文件

        :param kwargs: 关键字参数
        :return: 无返回值
        """
        self.in_path = kwargs["in_path"]
        self.save_path = kwargs["save_path"]
        self.folder.create_folder(self.save_path)
        nums = 0
        # 第一行是否为header行
        headers = False
        _set = set()
        for file, name in self.get_file(self.in_path, status=True):
            lines_nums = self.file.get_file_lines(file)
            print(lines_nums, file)
            if headers:
                lines_nums -= 1
            nums += lines_nums
        print(f"{self.in_path} 下总行数：{nums}")
            # _name = name.split(".")[0]
            # print(_name)
            # self.name_list.remove(_name)
        # print(self.name_list)


if __name__ == '__main__':
    in_path = R"D:\Desktop\2\手写体OCR_标注结果导出0823 (1)"
    save_path = R"D:\Desktop\2"
    e = Solution()
    e.process(in_path=in_path, save_path=save_path)
